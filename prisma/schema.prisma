// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_SHADOW")
}

model account {
  account_id Int             @id @default(autoincrement())
  username   String          @unique
  password   String
  posts      games_post[]
  comments   games_comment[]
  created_date  DateTime        @default(now())
}

model games {
  app_id               Int       @id
  title                String    @db.VarChar
  short_description    String
  detailed_description String?
  about_the_game       String?
  header_image         String    @db.VarChar
  capsule_image        String    @db.VarChar
  release_date         String    @db.VarChar
  developers           String[]  @db.VarChar
  publishers           String[]  @db.VarChar
  genres               String[]  @db.VarChar
  screenshots          String[]
  screenshots_full     String[]
  movies               String[]
  movies_full          String[]
  create_date          DateTime  @default(now()) @db.Timestamptz
  update_date          DateTime? @db.Timestamptz @updatedAt
  games_post           games_post[]
}

enum PostType {
  GUIDE
  REVIEW
  TIP
  QUESTION
}

model games_post {
  post_id      Int             @id @default(autoincrement())
  title        String
  contents     String
  post_type    PostType        @default(TIP)
  author       account?        @relation(fields: [author_id], references: [account_id])
  author_id    Int
  game         games?          @relation(fields: [app_id], references: [app_id])
  app_id       Int
  comments     games_comment[]
  created_date DateTime        @db.Timestamptz @default(now())
  updated_date DateTime        @db.Timestamptz @updatedAt
}

model games_comment {
  comment_id   Int        @id @default(autoincrement())
  contents     String
  author       account    @relation(fields: [author_id], references: [account_id])
  author_id    Int
  games_post   games_post @relation(fields: [post_id], references: [post_id])
  post_id      Int
  created_date DateTime   @db.Timestamptz @default(now())
  updated_date DateTime   @db.Timestamptz @updatedAt
}